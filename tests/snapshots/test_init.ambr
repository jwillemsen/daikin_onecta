# serializer version: 1
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinemergencystate',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isininstallerstate',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isholidaymodeactive',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinemergencystate',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinerrorstate',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isininstallerstate',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinwarningstate',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_ispowerfulmodeactive',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[binary_sensor.altherma_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma3m[button.altherma_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.altherma_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[button.altherma_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.altherma_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma3m[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 1,
      'temperature': 0,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma3m[select.altherma_domestichotwatertank_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_domestichotwatertank_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'DomesticHotWaterTank Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[select.altherma_domestichotwatertank_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_domestichotwatertank_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User defined',
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'leavingWaterTemperature',
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '905',
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_leavingwatertemperature',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_setpointmode',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependent',
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_errorcode',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '191',
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Heatup Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_heatupmode',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'reheatSchedule',
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_name',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_setpointmode',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_tanktemperature',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma3m[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '46',
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.5',
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.32.130',
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '14:13:33:dc:22:72',
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_altherma3m[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EDLA04E23V3',
  })
# ---
# name: test_altherma3m[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_name',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_altherma3m[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_softwareversion',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20017702',
  })
# ---
# name: test_altherma3m[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_name',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_altherma3m[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_softwareversion',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma3m[sensor.altherma_userinterface_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_modelinfo',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_userInterface_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_userinterface_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EDLA04E23V3',
  })
# ---
# name: test_altherma3m[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_name',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_altherma3m[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_softwareversion',
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '7.3.0',
  })
# ---
# name: test_altherma3m[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 50.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 10>,
    'translation_key': None,
    'unique_id': 'eb618890-5f42-496a-a34f-bae6e49260c2',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma3m[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 46.0,
      'friendly_name': 'Altherma',
      'max_temp': 50.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 10>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 42.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_ispowerfulmodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.linde_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.sanne_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[button.altherma_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.altherma_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[button.altherma_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.altherma_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma[button.johnny_maaike_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.johnny_maaike_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[button.johnny_maaike_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.johnny_maaike_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma[button.linde_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.linde_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[button.linde_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.linde_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma[button.sanne_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.sanne_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[button.sanne_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.sanne_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma[button.werkkamer_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.werkkamer_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[button.werkkamer_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.werkkamer_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 1,
      'temperature': 19,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 21,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 0.5,
      'temperature': 24.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.johnny_maaike_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Johnny&Maaike Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.johnny_maaike_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Johnny&Maaike Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'eco',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.linde_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.linde_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Linde Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.linde_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Linde Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.linde_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.sanne_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.sanne_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sanne Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.sanne_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Sanne Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.sanne_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[climate.werkkamer_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.werkkamer_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Werkkamer Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[climate.werkkamer_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Werkkamer Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.werkkamer_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.altherma_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.altherma_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.johnny_maaike_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.johnny_maaike_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.linde_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.linde_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.sanne_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.sanne_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[select.werkkamer_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[select.werkkamer_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1252',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_leavingwatertemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '27',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '17',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '515',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '9',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_tanktemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '48',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.1',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0023085',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'daikin-ap',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.altherma_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-81',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_eepromversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3608726-74',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0221',
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_date_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Date Time',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_datetime',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_dateTime',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_date_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Date Time',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2022-06-01T09:17:49',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_firmwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_micon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Micon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_miconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_miconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_micon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Micon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20010E02',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.2',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.6',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '11.5',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Johnny&Maaike',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002641374',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP83731',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-47',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.johnny_maaike_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18.7',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Linde',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.linde_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_altherma[sensor.linde_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.linde_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_altherma[sensor.linde_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.linde_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma[sensor.linde_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma[sensor.linde_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002404589',
  })
# ---
# name: test_altherma[sensor.linde_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP66051',
  })
# ---
# name: test_altherma[sensor.linde_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma[sensor.linde_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.linde_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.linde_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-48',
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma[sensor.linde_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.linde_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '31.5',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Sanne',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.sanne_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002405236',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP22483',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.sanne_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-35',
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma[sensor.sanne_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.sanne_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '22.5',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Werkkamer',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma[sensor.werkkamer_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002642750',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP32931',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma[sensor.werkkamer_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-46',
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma[sensor.werkkamer_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[sensor.werkkamer_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma[switch.johnny_maaike_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.johnny_maaike_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma[switch.johnny_maaike_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.johnny_maaike_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.linde_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.linde_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.linde_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.linde_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.sanne_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.sanne_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.sanne_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.sanne_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.werkkamer_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.werkkamer_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[switch.werkkamer_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[switch.werkkamer_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 11>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 48.0,
      'friendly_name': 'Altherma',
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 11>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 48.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_ispowerfulmodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.linde_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.sanne_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[button.altherma_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.altherma_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[button.altherma_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.altherma_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma_ratelimit[button.johnny_maaike_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.johnny_maaike_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[button.johnny_maaike_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.johnny_maaike_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma_ratelimit[button.linde_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.linde_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[button.linde_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.linde_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma_ratelimit[button.sanne_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.sanne_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[button.sanne_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.sanne_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma_ratelimit[button.werkkamer_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.werkkamer_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[button.werkkamer_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.werkkamer_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 1,
      'temperature': 19,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 21,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 0.5,
      'temperature': 24.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.johnny_maaike_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Johnny&Maaike Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.johnny_maaike_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Johnny&Maaike Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'eco',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.linde_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.linde_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Linde Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.linde_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Linde Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.linde_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.sanne_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.sanne_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sanne Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.sanne_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Sanne Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.sanne_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[climate.werkkamer_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.werkkamer_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Werkkamer Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[climate.werkkamer_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Werkkamer Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.werkkamer_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.altherma_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.altherma_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.johnny_maaike_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.johnny_maaike_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.linde_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.linde_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.sanne_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.sanne_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[select.werkkamer_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[select.werkkamer_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1252',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_leavingwatertemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '27',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '17',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '515',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '9',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_tanktemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '48',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.1',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0023085',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'daikin-ap',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-81',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_eepromversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3608726-74',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0221',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_date_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Date Time',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_datetime',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_dateTime',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_date_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Date Time',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2022-06-01T09:17:49',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_firmwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_micon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Micon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_miconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_miconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_micon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Micon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20010E02',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.2',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.6',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '11.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Johnny&Maaike',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002641374',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP83731',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-47',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.johnny_maaike_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18.7',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Linde',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002404589',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP66051',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-48',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.linde_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '31.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Sanne',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002405236',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP22483',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-35',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.sanne_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '22.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Werkkamer',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002642750',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP32931',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-46',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[sensor.werkkamer_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_ratelimit[switch.johnny_maaike_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.johnny_maaike_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_ratelimit[switch.johnny_maaike_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.johnny_maaike_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.linde_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.linde_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.linde_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.linde_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.sanne_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.sanne_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.sanne_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.sanne_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.werkkamer_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.werkkamer_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[switch.werkkamer_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[switch.werkkamer_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_ratelimit[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 11>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_ratelimit[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 48.0,
      'friendly_name': 'Altherma',
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 11>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 48.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_ispowerfulmodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[binary_sensor.altherma_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_altherma_schedule[button.altherma_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.altherma_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[button.altherma_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.altherma_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_altherma_schedule[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 36,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 1,
      'temperature': 0,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 36,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 23,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 23,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 0.5,
      'temperature': 20,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[select.altherma_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined 1',
        'User defined 2',
        'User defined 3',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[select.altherma_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined 1',
        'User defined 2',
        'User defined 3',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_altherma_schedule[select.altherma_domestichotwatertank_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_domestichotwatertank_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'DomesticHotWaterTank Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[select.altherma_domestichotwatertank_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_domestichotwatertank_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User defined',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1410',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_leavingwatertemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '36',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '424',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Heatup Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_heatupmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'reheatSchedule',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_tanktemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '51',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3.5.0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00:e9:3a:67:14:a6',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0223',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_userinterface_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_userinterface_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_altherma_schedule[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '7.7.0',
  })
# ---
# name: test_altherma_schedule[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 10>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_altherma_schedule[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 51.0,
      'friendly_name': 'Altherma',
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 10>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 45.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_button[binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_1_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_1_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_1_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_1_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_1_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_1_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_1_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_1_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_button[binary_sensor.bedroom_1_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_1_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_1_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_1_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_1_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_1_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_1_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_1_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_2_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_2_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_2_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_2_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_2_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_2_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_2_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_2_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_button[binary_sensor.bedroom_2_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_2_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_2_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_2_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_2_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_2_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_2_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_2_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_3_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_3_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_3_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_3_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_3_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_3_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_3_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_3_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_button[binary_sensor.bedroom_3_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_3_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_3_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_3_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_3_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_3_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.bedroom_3_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.bedroom_3_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.kitchen_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.kitchen_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.kitchen_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.kitchen_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.kitchen_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.kitchen_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.kitchen_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.kitchen_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.kitchen_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.kitchen_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_button[binary_sensor.kitchen_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.kitchen_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.kitchen_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.kitchen_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.kitchen_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.kitchen_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.kitchen_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.kitchen_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.lounge_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.lounge_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.lounge_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.lounge_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.lounge_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.lounge_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.lounge_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.lounge_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.lounge_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.lounge_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_button[binary_sensor.lounge_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.lounge_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.lounge_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.lounge_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.lounge_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.lounge_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.lounge_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.lounge_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bathroom_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bathroom_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bathroom_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bathroom_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bathroom_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bathroom_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bathroom_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bathroom_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_button[binary_sensor.master_bathroom_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bathroom_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bathroom_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bathroom_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bathroom_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bathroom_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bathroom_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bathroom_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bedroom_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bedroom_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bedroom_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bedroom_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bedroom_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bedroom_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bedroom_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bedroom_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_button[binary_sensor.master_bedroom_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bedroom_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bedroom_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bedroom_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bedroom_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bedroom_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[binary_sensor.master_bedroom_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[binary_sensor.master_bedroom_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[button.bedroom_1_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.bedroom_1_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[button.bedroom_1_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.bedroom_1_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_button[button.bedroom_2_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.bedroom_2_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[button.bedroom_2_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.bedroom_2_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_button[button.bedroom_3_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.bedroom_3_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[button.bedroom_3_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.bedroom_3_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_button[button.kitchen_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.kitchen_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[button.kitchen_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.kitchen_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_button[button.lounge_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.lounge_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[button.lounge_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.lounge_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_button[button.master_bathroom_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.master_bathroom_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[button.master_bathroom_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.master_bathroom_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_button[button.master_bedroom_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.master_bedroom_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[button.master_bedroom_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.master_bedroom_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_button[climate.bedroom_1_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.bedroom_1_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bedroom 1 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[climate.bedroom_1_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 22.9,
      'friendly_name': 'Bedroom 1 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.bedroom_1_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dry',
  })
# ---
# name: test_button[climate.bedroom_2_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.bedroom_2_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bedroom 2 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[climate.bedroom_2_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 24.5,
      'friendly_name': 'Bedroom 2 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.bedroom_2_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[climate.bedroom_3_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'swing_modes': list([
        'swing',
        'fixed',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.bedroom_3_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bedroom 3 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 432>,
    'translation_key': 'daikin_onecta',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[climate.bedroom_3_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'friendly_name': 'Bedroom 3 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 432>,
      'swing_mode': 'fixed',
      'swing_modes': list([
        'swing',
        'fixed',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'climate.bedroom_3_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[climate.kitchen_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.kitchen_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Kitchen Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[climate.kitchen_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 24.7,
      'friendly_name': 'Kitchen Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.kitchen_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[climate.lounge_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.lounge_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Lounge Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[climate.lounge_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 23.7,
      'friendly_name': 'Lounge Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.lounge_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dry',
  })
# ---
# name: test_button[climate.master_bathroom_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.master_bathroom_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Master Bathroom Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[climate.master_bathroom_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25.6,
      'friendly_name': 'Master Bathroom Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.master_bathroom_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[climate.master_bedroom_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.master_bedroom_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Master Bedroom Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[climate.master_bedroom_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25.1,
      'friendly_name': 'Master Bedroom Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.master_bedroom_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[select.bedroom_1_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.bedroom_1_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[select.bedroom_1_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bedroom_1_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[select.bedroom_2_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.bedroom_2_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[select.bedroom_2_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bedroom_2_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[select.bedroom_3_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.bedroom_3_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[select.bedroom_3_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bedroom_3_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[select.kitchen_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.kitchen_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[select.kitchen_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.kitchen_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[select.lounge_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.lounge_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[select.lounge_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.lounge_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[select.master_bathroom_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.master_bathroom_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[select.master_bathroom_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.master_bathroom_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[select.master_bedroom_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.master_bedroom_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[select.master_bedroom_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.master_bedroom_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_button[sensor.bedroom_1_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.bedroom_1_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Bedroom 1',
  })
# ---
# name: test_button[sensor.bedroom_1_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bedroom_1_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_button[sensor.bedroom_1_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Bedroom 1 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '22.9',
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.57',
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:9a:ec',
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_button[sensor.bedroom_1_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA20A2VEB',
  })
# ---
# name: test_button[sensor.bedroom_1_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_button[sensor.bedroom_1_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.bedroom_1_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_1_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_2_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.bedroom_2_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Bedroom 2',
  })
# ---
# name: test_button[sensor.bedroom_2_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bedroom_2_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_button[sensor.bedroom_2_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Bedroom 2 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '24.5',
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.58',
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a2:e0',
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_button[sensor.bedroom_2_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA20A2VEB',
  })
# ---
# name: test_button[sensor.bedroom_2_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_button[sensor.bedroom_2_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.bedroom_2_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_2_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_3_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.bedroom_3_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Bedroom 3',
  })
# ---
# name: test_button[sensor.bedroom_3_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bedroom_3_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_button[sensor.bedroom_3_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Bedroom 3 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.62',
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a0:ca',
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_button[sensor.bedroom_3_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXAA15AUV1B',
  })
# ---
# name: test_button[sensor.bedroom_3_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18013303',
  })
# ---
# name: test_button[sensor.bedroom_3_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.bedroom_3_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.bedroom_3_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.kitchen_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.kitchen_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Kitchen',
  })
# ---
# name: test_button[sensor.kitchen_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.kitchen_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_button[sensor.kitchen_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Kitchen ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '24.7',
  })
# ---
# name: test_button[sensor.kitchen_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_button[sensor.kitchen_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_button[sensor.kitchen_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.55',
  })
# ---
# name: test_button[sensor.kitchen_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a0:bc',
  })
# ---
# name: test_button[sensor.kitchen_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_button[sensor.kitchen_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA32A2VEB',
  })
# ---
# name: test_button[sensor.kitchen_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_button[sensor.kitchen_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.kitchen_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.kitchen_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.lounge_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.lounge_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Lounge',
  })
# ---
# name: test_button[sensor.lounge_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.lounge_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_button[sensor.lounge_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Lounge ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '23.7',
  })
# ---
# name: test_button[sensor.lounge_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_button[sensor.lounge_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_button[sensor.lounge_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.56',
  })
# ---
# name: test_button[sensor.lounge_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a1:f0',
  })
# ---
# name: test_button[sensor.lounge_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_button[sensor.lounge_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA32A2VEB',
  })
# ---
# name: test_button[sensor.lounge_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_button[sensor.lounge_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.lounge_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_button[sensor.lounge_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.lounge_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.lounge_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.lounge_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.lounge_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.lounge_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.lounge_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bathroom_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.master_bathroom_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Master Bathroom',
  })
# ---
# name: test_button[sensor.master_bathroom_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.master_bathroom_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_button[sensor.master_bathroom_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Master Bathroom ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25.6',
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.61',
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a5:24',
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_button[sensor.master_bathroom_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA20A2VEB',
  })
# ---
# name: test_button[sensor.master_bathroom_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_button[sensor.master_bathroom_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.master_bathroom_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bathroom_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bedroom_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.master_bedroom_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Master Bedroom',
  })
# ---
# name: test_button[sensor.master_bedroom_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.master_bedroom_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_button[sensor.master_bedroom_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Master Bedroom ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25.1',
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.59',
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a0:86',
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_button[sensor.master_bedroom_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA25A2VEB',
  })
# ---
# name: test_button[sensor.master_bedroom_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_button[sensor.master_bedroom_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_button[sensor.master_bedroom_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_button[sensor.master_bedroom_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_ispowerfulmodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.johnny_maaike_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.linde_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.linde_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.sanne_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sanne_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sanne OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[button.altherma_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.altherma_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[button.altherma_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.altherma_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_climate[button.johnny_maaike_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.johnny_maaike_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[button.johnny_maaike_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.johnny_maaike_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_climate[button.linde_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.linde_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[button.linde_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.linde_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_climate[button.sanne_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.sanne_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[button.sanne_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.sanne_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_climate[button.werkkamer_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.werkkamer_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[button.werkkamer_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.werkkamer_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_climate[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 27,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 20,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 1,
      'temperature': 19,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 21,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 28,
      'min_temp': 23,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 0.5,
      'temperature': 24.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.johnny_maaike_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Johnny&Maaike Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.johnny_maaike_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Johnny&Maaike Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'eco',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.johnny_maaike_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.linde_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.linde_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Linde Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.linde_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Linde Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.linde_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.sanne_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.sanne_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sanne Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.sanne_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Sanne Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.sanne_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[climate.werkkamer_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.werkkamer_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Werkkamer Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[climate.werkkamer_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Werkkamer Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 33,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.werkkamer_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.altherma_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.altherma_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.johnny_maaike_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.johnny_maaike_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.johnny_maaike_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.linde_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.linde_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.linde_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.sanne_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.sanne_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sanne_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[select.werkkamer_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[select.werkkamer_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1252',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '8',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_leavingwatertemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '27',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '17',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-00',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '515',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '9',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_tanktemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '48',
  })
# ---
# name: test_climate[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.1',
  })
# ---
# name: test_climate[sensor.altherma_gateway_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_climate[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_climate[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_climate[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_climate[sensor.altherma_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0023085',
  })
# ---
# name: test_climate[sensor.altherma_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'daikin-ap',
  })
# ---
# name: test_climate[sensor.altherma_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.altherma_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.altherma_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-81',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_eepromversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3608726-74',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0221',
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_date_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Date Time',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_datetime',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_dateTime',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_date_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Date Time',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_date_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2022-06-01T09:17:49',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_firmwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_iconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_micon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Micon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_miconid',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_miconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_micon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Micon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_micon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20010E02',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_climate[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.3.0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.2',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '6.6',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '11.5',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Johnny&Maaike',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.johnny_maaike_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002641374',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP83731',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.johnny_maaike_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-47',
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate[sensor.johnny_maaike_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '32db6075-b739-4026-b661-127009254b42_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.johnny_maaike_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.johnny_maaike_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18.7',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Linde',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.linde_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_climate[sensor.linde_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.linde_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_climate[sensor.linde_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.linde_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate[sensor.linde_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate[sensor.linde_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002404589',
  })
# ---
# name: test_climate[sensor.linde_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP66051',
  })
# ---
# name: test_climate[sensor.linde_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate[sensor.linde_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.linde_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.linde_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-48',
  })
# ---
# name: test_climate[sensor.linde_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[sensor.linde_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_climate[sensor.linde_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate[sensor.linde_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.linde_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.linde_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.linde_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '31.5',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Sanne',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.sanne_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_climate[sensor.sanne_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.sanne_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_climate[sensor.sanne_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.sanne_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate[sensor.sanne_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate[sensor.sanne_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002405236',
  })
# ---
# name: test_climate[sensor.sanne_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP22483',
  })
# ---
# name: test_climate[sensor.sanne_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate[sensor.sanne_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.sanne_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.sanne_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-35',
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FD',
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate[sensor.sanne_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.sanne_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sanne_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.6',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sanne ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '22.5',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Werkkamer',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.5',
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate[sensor.werkkamer_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sanne ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_51',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000002642750',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP32931',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'WILLEMSEN',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate[sensor.werkkamer_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Sanne Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-46',
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate[sensor.werkkamer_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[sensor.werkkamer_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate[switch.johnny_maaike_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.johnny_maaike_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate[switch.johnny_maaike_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '32db6075-b739-4026-b661-127009254b42_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.johnny_maaike_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.johnny_maaike_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.linde_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.linde_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.linde_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c04342c4-2fbc-4a32-b54d-6067fa1311f6_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.linde_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.linde_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.sanne_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.sanne_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.sanne_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'f7ff41ad-4169-45e5-8df4-15e033a05668_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.sanne_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.sanne_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.werkkamer_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.werkkamer_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[switch.werkkamer_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[switch.werkkamer_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sanne ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.werkkamer_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 11>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 48.0,
      'friendly_name': 'Altherma',
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 11>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 48.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[binary_sensor.werkkamer_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Werkkamer OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.werkkamer_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[button.werkkamer_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.werkkamer_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[button.werkkamer_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.werkkamer_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_climate_fixedfanmode[climate.werkkamer_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.werkkamer_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Werkkamer Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[climate.werkkamer_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'fan_mode': '3',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Werkkamer Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 21,
    }),
    'context': <ANY>,
    'entity_id': 'climate.werkkamer_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[select.werkkamer_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[select.werkkamer_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.werkkamer_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.1',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'U0-00',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.3',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Werkkamer ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12.5',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Werkkamer',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Werkkamer ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '14.5',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Werkkamer ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_28_0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.200',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'e8:4f:25:c7:fe:da',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6f944461-08cb-4fee-979c-710ff66cea77_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_fixedfanmode[sensor.werkkamer_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Werkkamer RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.werkkamer_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_mode_conflict-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_mode_conflict',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Mode Conflict',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinmodeconflict',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isInModeConflict',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_mode_conflict-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens ClimateControl Is In Mode Conflict',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_mode_conflict',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.laurens_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Laurens OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.laurens_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_cool_heat_master-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_cool_heat_master',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Cool Heat Master',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iscoolheatmaster',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isCoolHeatMaster',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_cool_heat_master-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Is Cool Heat Master',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_cool_heat_master',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_lock_function_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_lock_function_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Lock Function Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_islockfunctionenabled',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isLockFunctionEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_lock_function_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Is Lock Function Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_lock_function_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_daylight_saving_time_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_daylight_saving_time_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Daylight Saving Time Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_daylightsavingtimeenabled',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_daylightSavingTimeEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_daylight_saving_time_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Daylight Saving Time Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_daylight_saving_time_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_led_enabled-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_led_enabled',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Led Enabled',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ledenabled',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_ledEnabled',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_gateway_led_enabled-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Led Enabled',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_gateway_led_enabled',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[binary_sensor.woonkamer_airco_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Woonkamer airco OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.woonkamer_airco_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[button.laurens_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.laurens_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[button.laurens_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.laurens_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_climate_floorheatingairflow[button.woonkamer_airco_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.woonkamer_airco_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[button.woonkamer_airco_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.woonkamer_airco_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_climate_floorheatingairflow[climate.laurens_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.laurens_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Laurens Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[climate.laurens_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 16,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Laurens Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'windnice',
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23,
    }),
    'context': <ANY>,
    'entity_id': 'climate.laurens_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[climate.woonkamer_airco_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'floorheatingairflow',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.woonkamer_airco_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Woonkamer airco Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 441>,
    'translation_key': 'daikin_onecta',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[climate.woonkamer_airco_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 18,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Woonkamer airco Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'eco',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 441>,
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
        'floorheatingairflow',
      ]),
      'target_temp_step': 0.5,
      'temperature': 23.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.woonkamer_airco_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_climate_floorheatingairflow[select.laurens_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.laurens_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[select.laurens_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.laurens_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[select.woonkamer_airco_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.woonkamer_airco_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[select.woonkamer_airco_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.woonkamer_airco_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '29.9',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0.5',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Laurens ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '23.3',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Laurens',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Laurens ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '9.5',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Laurens ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '16',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'e8:4f:25:d3:f5:fe',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000003088268',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP31731',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'SSIDPLOEG24',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Laurens Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-50',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.laurens_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12FC',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20003001',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.laurens_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.laurens_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.laurens_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '13.2',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Woonkamer airco ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '89.5',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_icon_id-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_icon_id',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Icon Id',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_iconid',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_iconId',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_icon_id-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Icon Id',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_icon_id',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Woonkamer airco',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_outdoor_silent_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_outdoor_silent_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Outdoor Silent Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoorsilentmode',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_None_outdoorSilentMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_outdoor_silent_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Outdoor Silent Mode',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_outdoor_silent_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Woonkamer airco ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '9.5',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_room_humidity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_room_humidity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': 'mdi:water-percent',
    'original_name': 'ClimateControl Room Humidity',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomhumidity',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_sensoryData_roomHumidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_room_humidity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'Woonkamer airco ClimateControl Room Humidity',
      'icon': 'mdi:water-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_room_humidity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '55',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Woonkamer airco ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_12_84',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:81:f4:46',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_region_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_region_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Region Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_regioncode',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_regionCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_region_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Region Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_region_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'eu',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0000000005165265',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_ssid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_ssid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Ssid',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ssid',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_ssid',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_ssid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Ssid',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_ssid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP79283',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_time_zone-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_time_zone',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Time Zone',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_timezone',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_timeZone',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_time_zone-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Time Zone',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_time_zone',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Europe/Amsterdam',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_wifi_connection_s_s_i_d-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_wifi_connection_s_s_i_d',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:access-point-network',
    'original_name': 'Gateway Wifi Connection S S I D',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionssid',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_wifiConnectionSSID',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_wifi_connection_s_s_i_d-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco Gateway Wifi Connection S S I D',
      'icon': 'mdi:access-point-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_wifi_connection_s_s_i_d',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'SSIDPLOEG24',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_wifi_connection_strength-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_gateway_wifi_connection_strength',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>,
    'original_icon': 'mdi:wifi',
    'original_name': 'Gateway Wifi Connection Strength',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_wificonnectionstrength',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_gateway_None_wifiConnectionStrength',
    'unit_of_measurement': 'dBm',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_gateway_wifi_connection_strength-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'signal_strength',
      'friendly_name': 'Woonkamer airco Gateway Wifi Connection Strength',
      'icon': 'mdi:wifi',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'dBm',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_gateway_wifi_connection_strength',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-54',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_dry_keep_setting-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_dry_keep_setting',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:water-percent',
    'original_name': 'IndoorUnit Dry Keep Setting',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_drykeepsetting',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_indoorUnit_None_dryKeepSetting',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_dry_keep_setting-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco IndoorUnit Dry Keep Setting',
      'icon': 'mdi:water-percent',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_dry_keep_setting',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_eeprom_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_eeprom_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Eeprom Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_eepromversion',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_indoorUnit_None_eepromVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_eeprom_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco IndoorUnit Eeprom Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_eeprom_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1576',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19015C02',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[sensor.woonkamer_airco_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.woonkamer_airco_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_climate_floorheatingairflow[switch.laurens_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.laurens_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[switch.laurens_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.laurens_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[switch.laurens_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.laurens_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '71f33ee1-a82d-4f08-8f61-bf25fd872731_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[switch.laurens_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Laurens ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.laurens_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[switch.woonkamer_airco_climatecontrol_econo_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.woonkamer_airco_climatecontrol_econo_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:leaf',
    'original_name': 'ClimateControl Econo Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_econoMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[switch.woonkamer_airco_climatecontrol_econo_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Econo Mode',
      'icon': 'mdi:leaf',
    }),
    'context': <ANY>,
    'entity_id': 'switch.woonkamer_airco_climatecontrol_econo_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_climate_floorheatingairflow[switch.woonkamer_airco_climatecontrol_streamer_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'switch',
    'entity_category': None,
    'entity_id': 'switch.woonkamer_airco_climatecontrol_streamer_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'hass:air-filter',
    'original_name': 'ClimateControl Streamer Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '27920256-e0af-4780-8f5f-1f88d8fdf0ba_climateControl_streamerMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_climate_floorheatingairflow[switch.woonkamer_airco_climatecontrol_streamer_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Woonkamer airco ClimateControl Streamer Mode',
      'icon': 'hass:air-filter',
    }),
    'context': <ANY>,
    'entity_id': 'switch.woonkamer_airco_climatecontrol_streamer_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_1_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_2_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.bedroom_3_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.kitchen_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.kitchen_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.kitchen_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.kitchen_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.kitchen_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.kitchen_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.kitchen_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.kitchen_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.kitchen_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.kitchen_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry2[binary_sensor.kitchen_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.kitchen_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.kitchen_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.kitchen_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.kitchen_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.kitchen_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.kitchen_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.kitchen_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.lounge_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.lounge_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.lounge_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.lounge_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.lounge_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.lounge_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.lounge_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.lounge_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.lounge_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.lounge_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry2[binary_sensor.lounge_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.lounge_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.lounge_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.lounge_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.lounge_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.lounge_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.lounge_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.lounge_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bathroom_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[binary_sensor.master_bedroom_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[button.bedroom_1_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.bedroom_1_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[button.bedroom_1_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.bedroom_1_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry2[button.bedroom_2_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.bedroom_2_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[button.bedroom_2_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.bedroom_2_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry2[button.bedroom_3_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.bedroom_3_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[button.bedroom_3_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.bedroom_3_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry2[button.kitchen_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.kitchen_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[button.kitchen_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.kitchen_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry2[button.lounge_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.lounge_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[button.lounge_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.lounge_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry2[button.master_bathroom_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.master_bathroom_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[button.master_bathroom_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.master_bathroom_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry2[button.master_bedroom_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.master_bedroom_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[button.master_bedroom_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.master_bedroom_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry2[climate.bedroom_1_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.bedroom_1_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bedroom 1 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[climate.bedroom_1_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 23.9,
      'friendly_name': 'Bedroom 1 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.bedroom_1_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[climate.bedroom_2_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.bedroom_2_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bedroom 2 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[climate.bedroom_2_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 24.7,
      'friendly_name': 'Bedroom 2 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.bedroom_2_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[climate.bedroom_3_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'swing_modes': list([
        'swing',
        'fixed',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.bedroom_3_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bedroom 3 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 432>,
    'translation_key': 'daikin_onecta',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[climate.bedroom_3_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19.2,
      'friendly_name': 'Bedroom 3 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 432>,
      'swing_mode': 'fixed',
      'swing_modes': list([
        'swing',
        'fixed',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'climate.bedroom_3_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[climate.kitchen_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.kitchen_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Kitchen Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[climate.kitchen_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 24.8,
      'friendly_name': 'Kitchen Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.kitchen_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[climate.lounge_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.lounge_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Lounge Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[climate.lounge_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 23.9,
      'friendly_name': 'Lounge Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.lounge_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dry',
  })
# ---
# name: test_dry2[climate.master_bathroom_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.master_bathroom_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Master Bathroom Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[climate.master_bathroom_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25.7,
      'friendly_name': 'Master Bathroom Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.master_bathroom_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[climate.master_bedroom_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.master_bedroom_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Master Bedroom Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[climate.master_bedroom_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25.1,
      'friendly_name': 'Master Bedroom Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.master_bedroom_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[select.bedroom_1_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.bedroom_1_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[select.bedroom_1_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bedroom_1_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[select.bedroom_2_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.bedroom_2_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[select.bedroom_2_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bedroom_2_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[select.bedroom_3_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.bedroom_3_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[select.bedroom_3_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bedroom_3_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[select.kitchen_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.kitchen_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[select.kitchen_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.kitchen_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[select.lounge_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.lounge_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[select.lounge_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.lounge_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[select.master_bathroom_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.master_bathroom_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[select.master_bathroom_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.master_bathroom_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[select.master_bedroom_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.master_bedroom_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[select.master_bedroom_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.master_bedroom_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry2[sensor.bedroom_1_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.bedroom_1_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Bedroom 1',
  })
# ---
# name: test_dry2[sensor.bedroom_1_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bedroom_1_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry2[sensor.bedroom_1_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Bedroom 1 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '23.9',
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.57',
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:9a:ec',
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry2[sensor.bedroom_1_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA20A2VEB',
  })
# ---
# name: test_dry2[sensor.bedroom_1_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry2[sensor.bedroom_1_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.bedroom_1_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_1_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_2_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.bedroom_2_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Bedroom 2',
  })
# ---
# name: test_dry2[sensor.bedroom_2_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bedroom_2_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry2[sensor.bedroom_2_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Bedroom 2 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '24.7',
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.58',
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a2:e0',
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry2[sensor.bedroom_2_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA20A2VEB',
  })
# ---
# name: test_dry2[sensor.bedroom_2_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry2[sensor.bedroom_2_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.bedroom_2_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_2_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_3_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.bedroom_3_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Bedroom 3',
  })
# ---
# name: test_dry2[sensor.bedroom_3_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bedroom_3_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry2[sensor.bedroom_3_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Bedroom 3 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19.2',
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.62',
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a0:ca',
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry2[sensor.bedroom_3_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXAA15AUV1B',
  })
# ---
# name: test_dry2[sensor.bedroom_3_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18013303',
  })
# ---
# name: test_dry2[sensor.bedroom_3_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.bedroom_3_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.bedroom_3_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.kitchen_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.kitchen_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Kitchen',
  })
# ---
# name: test_dry2[sensor.kitchen_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.kitchen_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry2[sensor.kitchen_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Kitchen ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '24.8',
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.55',
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a0:bc',
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry2[sensor.kitchen_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA32A2VEB',
  })
# ---
# name: test_dry2[sensor.kitchen_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry2[sensor.kitchen_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.kitchen_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.kitchen_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.lounge_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.lounge_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Lounge',
  })
# ---
# name: test_dry2[sensor.lounge_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.lounge_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry2[sensor.lounge_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Lounge ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '23.9',
  })
# ---
# name: test_dry2[sensor.lounge_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry2[sensor.lounge_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry2[sensor.lounge_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.56',
  })
# ---
# name: test_dry2[sensor.lounge_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a1:f0',
  })
# ---
# name: test_dry2[sensor.lounge_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry2[sensor.lounge_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA32A2VEB',
  })
# ---
# name: test_dry2[sensor.lounge_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry2[sensor.lounge_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.lounge_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.lounge_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bathroom_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.master_bathroom_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Master Bathroom',
  })
# ---
# name: test_dry2[sensor.master_bathroom_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.master_bathroom_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry2[sensor.master_bathroom_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Master Bathroom ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25.7',
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.61',
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a5:24',
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry2[sensor.master_bathroom_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA20A2VEB',
  })
# ---
# name: test_dry2[sensor.master_bathroom_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry2[sensor.master_bathroom_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.master_bathroom_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bathroom_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bedroom_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.master_bedroom_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Master Bedroom',
  })
# ---
# name: test_dry2[sensor.master_bedroom_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.master_bedroom_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry2[sensor.master_bedroom_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Master Bedroom ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25.1',
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.59',
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a0:86',
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry2[sensor.master_bedroom_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA25A2VEB',
  })
# ---
# name: test_dry2[sensor.master_bedroom_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry2[sensor.master_bedroom_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry2[sensor.master_bedroom_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry2[sensor.master_bedroom_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_1_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 1 OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_1_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_2_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 2 OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_2_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.bedroom_3_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Bedroom 3 OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.bedroom_3_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.kitchen_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.kitchen_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.kitchen_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.kitchen_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.kitchen_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.kitchen_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.kitchen_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.kitchen_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.kitchen_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.kitchen_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry[binary_sensor.kitchen_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.kitchen_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.kitchen_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.kitchen_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.kitchen_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.kitchen_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.kitchen_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.kitchen_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Kitchen OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.kitchen_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.lounge_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.lounge_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.lounge_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.lounge_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.lounge_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.lounge_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.lounge_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.lounge_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.lounge_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.lounge_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry[binary_sensor.lounge_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.lounge_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.lounge_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.lounge_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.lounge_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.lounge_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.lounge_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.lounge_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Lounge OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.lounge_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bathroom_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bathroom OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bathroom_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[binary_sensor.master_bedroom_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master Bedroom OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_bedroom_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[button.bedroom_1_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.bedroom_1_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[button.bedroom_1_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.bedroom_1_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry[button.bedroom_2_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.bedroom_2_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[button.bedroom_2_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.bedroom_2_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry[button.bedroom_3_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.bedroom_3_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[button.bedroom_3_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.bedroom_3_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry[button.kitchen_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.kitchen_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[button.kitchen_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.kitchen_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry[button.lounge_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.lounge_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[button.lounge_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.lounge_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry[button.master_bathroom_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.master_bathroom_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[button.master_bathroom_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.master_bathroom_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry[button.master_bedroom_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.master_bedroom_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[button.master_bedroom_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.master_bedroom_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_dry[climate.bedroom_1_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.bedroom_1_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bedroom 1 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[climate.bedroom_1_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 22.9,
      'friendly_name': 'Bedroom 1 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.bedroom_1_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dry',
  })
# ---
# name: test_dry[climate.bedroom_2_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.bedroom_2_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bedroom 2 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[climate.bedroom_2_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 24.5,
      'friendly_name': 'Bedroom 2 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.bedroom_2_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[climate.bedroom_3_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'swing_modes': list([
        'swing',
        'fixed',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.bedroom_3_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Bedroom 3 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 432>,
    'translation_key': 'daikin_onecta',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[climate.bedroom_3_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19,
      'friendly_name': 'Bedroom 3 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 432>,
      'swing_mode': 'fixed',
      'swing_modes': list([
        'swing',
        'fixed',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'climate.bedroom_3_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[climate.kitchen_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.kitchen_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Kitchen Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[climate.kitchen_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 24.7,
      'friendly_name': 'Kitchen Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.kitchen_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[climate.lounge_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.lounge_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Lounge Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[climate.lounge_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 23.7,
      'friendly_name': 'Lounge Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.lounge_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dry',
  })
# ---
# name: test_dry[climate.master_bathroom_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.master_bathroom_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Master Bathroom Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[climate.master_bathroom_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25.6,
      'friendly_name': 'Master Bathroom Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.master_bathroom_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[climate.master_bedroom_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.master_bedroom_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Master Bedroom Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[climate.master_bedroom_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25.1,
      'friendly_name': 'Master Bedroom Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.DRY: 'dry'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.master_bedroom_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[select.bedroom_1_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.bedroom_1_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[select.bedroom_1_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bedroom_1_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[select.bedroom_2_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.bedroom_2_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[select.bedroom_2_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bedroom_2_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[select.bedroom_3_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.bedroom_3_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[select.bedroom_3_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.bedroom_3_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[select.kitchen_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.kitchen_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[select.kitchen_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.kitchen_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[select.lounge_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.lounge_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[select.lounge_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.lounge_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[select.master_bathroom_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.master_bathroom_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[select.master_bathroom_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.master_bathroom_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[select.master_bedroom_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.master_bedroom_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[select.master_bedroom_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.master_bedroom_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_dry[sensor.bedroom_1_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.bedroom_1_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Bedroom 1',
  })
# ---
# name: test_dry[sensor.bedroom_1_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bedroom_1_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry[sensor.bedroom_1_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Bedroom 1 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '22.9',
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.57',
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:9a:ec',
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry[sensor.bedroom_1_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA20A2VEB',
  })
# ---
# name: test_dry[sensor.bedroom_1_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry[sensor.bedroom_1_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.bedroom_1_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_1_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7bd36d96-73b3-44a1-8642-f3650e9cc732_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_1_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 1 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_1_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_2_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.bedroom_2_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Bedroom 2',
  })
# ---
# name: test_dry[sensor.bedroom_2_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bedroom_2_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry[sensor.bedroom_2_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Bedroom 2 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '24.5',
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.58',
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a2:e0',
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry[sensor.bedroom_2_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA20A2VEB',
  })
# ---
# name: test_dry[sensor.bedroom_2_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry[sensor.bedroom_2_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.bedroom_2_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_2_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'df4648e9-d40b-4242-b9fe-e5d0f6451a6b_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_2_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 2 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_2_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_3_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.bedroom_3_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Bedroom 3',
  })
# ---
# name: test_dry[sensor.bedroom_3_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.bedroom_3_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry[sensor.bedroom_3_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Bedroom 3 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19',
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.62',
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a0:ca',
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry[sensor.bedroom_3_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXAA15AUV1B',
  })
# ---
# name: test_dry[sensor.bedroom_3_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18013303',
  })
# ---
# name: test_dry[sensor.bedroom_3_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.bedroom_3_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.bedroom_3_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4c60a395-f659-47d6-9a4b-be9aae836761_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.bedroom_3_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Bedroom 3 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.bedroom_3_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.kitchen_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.kitchen_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Kitchen',
  })
# ---
# name: test_dry[sensor.kitchen_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.kitchen_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry[sensor.kitchen_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Kitchen ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '24.7',
  })
# ---
# name: test_dry[sensor.kitchen_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry[sensor.kitchen_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry[sensor.kitchen_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.55',
  })
# ---
# name: test_dry[sensor.kitchen_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a0:bc',
  })
# ---
# name: test_dry[sensor.kitchen_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry[sensor.kitchen_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA32A2VEB',
  })
# ---
# name: test_dry[sensor.kitchen_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry[sensor.kitchen_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.kitchen_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.kitchen_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '72b407b4-4e6f-47e2-814f-ee36d1548858_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.kitchen_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.lounge_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.lounge_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Lounge',
  })
# ---
# name: test_dry[sensor.lounge_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.lounge_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry[sensor.lounge_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Lounge ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '23.7',
  })
# ---
# name: test_dry[sensor.lounge_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry[sensor.lounge_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry[sensor.lounge_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.56',
  })
# ---
# name: test_dry[sensor.lounge_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a1:f0',
  })
# ---
# name: test_dry[sensor.lounge_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry[sensor.lounge_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA32A2VEB',
  })
# ---
# name: test_dry[sensor.lounge_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry[sensor.lounge_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.lounge_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.lounge_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1bcc6300-47e8-46c8-9ca8-79b4e649e145_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.lounge_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Lounge RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.lounge_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bathroom_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.master_bathroom_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Master Bathroom',
  })
# ---
# name: test_dry[sensor.master_bathroom_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.master_bathroom_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry[sensor.master_bathroom_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Master Bathroom ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25.6',
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.61',
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a5:24',
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry[sensor.master_bathroom_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA20A2VEB',
  })
# ---
# name: test_dry[sensor.master_bathroom_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry[sensor.master_bathroom_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.master_bathroom_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bathroom_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1b4e05a4-466d-41d8-b90e-19dded548684_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bathroom_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bathroom RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bathroom_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bedroom_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.master_bedroom_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Master Bedroom',
  })
# ---
# name: test_dry[sensor.master_bedroom_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.master_bedroom_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_dry[sensor.master_bedroom_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Master Bedroom ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25.1',
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_30_0',
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.87.59',
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'dc:fe:23:bb:a0:86',
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C5x',
  })
# ---
# name: test_dry[sensor.master_bedroom_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FXSA25A2VEB',
  })
# ---
# name: test_dry[sensor.master_bedroom_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19000A03',
  })
# ---
# name: test_dry[sensor.master_bedroom_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-',
  })
# ---
# name: test_dry[sensor.master_bedroom_outdoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_modelinfo',
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_outdoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_outdoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom OutdoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_outdoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'RXYSA6A7V1B',
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_bedroom_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'c7d4957f-2b0a-468f-adbc-06d150d9af39_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_dry[sensor.master_bedroom_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Bedroom RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_bedroom_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[binary_sensor.sala_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sala_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[binary_sensor.sala_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sala_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_fanmode[binary_sensor.sala_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sala_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[binary_sensor.sala_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Sala ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sala_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_fanmode[binary_sensor.sala_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sala_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[binary_sensor.sala_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sala_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_fanmode[binary_sensor.sala_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.sala_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[binary_sensor.sala_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.sala_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_fanmode[button.sala_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.sala_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[button.sala_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.sala_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_fanmode[climate.sala_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'quiet',
        'auto',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.sala_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Sala Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[climate.sala_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 21,
      'fan_mode': 'auto',
      'fan_modes': list([
        'quiet',
        'auto',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Sala Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
      ]),
      'target_temp_step': 0.5,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.sala_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_fanmode[select.sala_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.sala_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[select.sala_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.sala_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sala_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sala ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sala_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sala ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sala_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sala ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26.9',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sala_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sala ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sala_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sala ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sala_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Sala ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1.9',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Sala',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sala_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sala ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '18',
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.sala_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_fanmode[sensor.sala_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Sala ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_fanmode[sensor.sala_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4_0_3',
  })
# ---
# name: test_fanmode[sensor.sala_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.2',
  })
# ---
# name: test_fanmode[sensor.sala_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'MANUALLY_REMOVED',
  })
# ---
# name: test_fanmode[sensor.sala_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A4x',
  })
# ---
# name: test_fanmode[sensor.sala_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_fanmode[sensor.sala_indoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_indoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_name',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_indoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_indoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala IndoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_indoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Unit',
  })
# ---
# name: test_fanmode[sensor.sala_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3.20',
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.sala_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_fanmode[sensor.sala_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Sala RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.sala_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_gas[binary_sensor.my_living_room_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.my_living_room_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[binary_sensor.my_living_room_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.my_living_room_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_gas[binary_sensor.my_living_room_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.my_living_room_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[binary_sensor.my_living_room_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.my_living_room_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_gas[button.my_living_room_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.my_living_room_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[button.my_living_room_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.my_living_room_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_gas[climate.my_living_room_calculated_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 65,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.my_living_room_calculated_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'My Living Room Calculated Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_calculatedLeavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[climate.my_living_room_calculated_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': None,
      'friendly_name': 'My Living Room Calculated Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 65,
      'min_temp': 10,
      'preset_mode': 'boost',
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.my_living_room_calculated_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_gas[climate.my_living_room_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 30,
      'min_temp': 20,
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.my_living_room_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'My Living Room Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[climate.my_living_room_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 12,
      'friendly_name': 'My Living Room Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 30,
      'min_temp': 20,
      'preset_mode': 'boost',
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.my_living_room_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_gas[climate.my_living_room_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 30,
      'min_temp': 20,
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.my_living_room_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'My Living Room Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[climate.my_living_room_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 20,
      'friendly_name': 'My Living Room Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 30,
      'min_temp': 20,
      'preset_mode': 'boost',
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'temperature': 25,
    }),
    'context': <ANY>,
    'entity_id': 'climate.my_living_room_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_gas[select.my_living_room_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'althermaClimateControl0',
        'althermaClimateControl1',
        'althermaClimateControl2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.my_living_room_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[select.my_living_room_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'althermaClimateControl0',
        'althermaClimateControl1',
        'althermaClimateControl2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.my_living_room_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_daily_gas_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_daily_gas_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Gas Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_gas_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_daily_gas_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Cooling Daily Gas Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_daily_gas_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '260',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_weekly_gas_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_weekly_gas_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Gas Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_gas_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_weekly_gas_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Cooling Weekly Gas Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_weekly_gas_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '260',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '264',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_yearly_gas_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_yearly_gas_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Gas Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_gas_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_cooling_yearly_gas_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Cooling Yearly Gas Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_cooling_yearly_gas_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '264',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_daily_gas_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_daily_gas_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Gas Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_gas_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_daily_gas_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Heating Daily Gas Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_daily_gas_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '260',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_weekly_gas_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_weekly_gas_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Gas Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_gas_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_weekly_gas_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Heating Weekly Gas Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_weekly_gas_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '260',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '264',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_yearly_gas_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_yearly_gas_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Gas Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_gas_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heating_yearly_gas_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'My Living Room ClimateControl Heating Yearly Gas Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_heating_yearly_gas_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '264',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Heatup Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_heatupmode',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room ClimateControl Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_heatup_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'reheatOnly',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_leavingwatertemperature',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'My Living Room ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'My Living Room',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'My Living Room ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'My Living Room ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '20',
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_setpointmode',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependent',
  })
# ---
# name: test_gas[sensor.my_living_room_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_tanktemperature',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_gas[sensor.my_living_room_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'My Living Room DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '40',
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_firmware_update_status-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.my_living_room_gateway_firmware_update_status',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Gateway Firmware Update Status',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareupdatestatus',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_firmwareUpdateStatus',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_firmware_update_status-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room Gateway Firmware Update Status',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_gateway_firmware_update_status',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'in-progress',
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '436CC038000',
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.0.1',
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00:23:7e:f8:26:4e',
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A62',
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'My Gateway',
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_serial_number-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_gateway_serial_number',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:numeric',
    'original_name': 'Gateway Serial Number',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_serialnumber',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_serialNumber',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_gateway_serial_number-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room Gateway Serial Number',
      'icon': 'mdi:numeric',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_gateway_serial_number',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '165000014',
  })
# ---
# name: test_gas[sensor.my_living_room_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVH08S18CB3V',
  })
# ---
# name: test_gas[sensor.my_living_room_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_softwareversion',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'ID66F2',
  })
# ---
# name: test_gas[sensor.my_living_room_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_softwareversion',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'ID0000',
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.my_living_room_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[sensor.my_living_room_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'My Living Room RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.my_living_room_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_gas[water_heater.my_living_room-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': None,
      'min_temp': None,
      'operation_list': list([
        'off',
        'heat_pump',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.my_living_room',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'My Living Room',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 10>,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9',
    'unit_of_measurement': None,
  })
# ---
# name: test_gas[water_heater.my_living_room-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 40.0,
      'friendly_name': 'My Living Room',
      'max_temp': None,
      'min_temp': None,
      'operation_list': list([
        'off',
        'heat_pump',
      ]),
      'operation_mode': 'off',
      'supported_features': <WaterHeaterEntityFeature: 10>,
      'target_temp_high': None,
      'target_temp_low': None,
      'temperature': None,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.my_living_room',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.ndj_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.ndj_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.ndj_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'NDJ ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.ndj_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.ndj_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'NDJ ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.ndj_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_domestichotwaterflowthrough_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.ndj_domestichotwaterflowthrough_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwaterflowthrough_isholidaymodeactive',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_domestichotwaterflowthrough_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ DomesticHotWaterFlowThrough Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.ndj_domestichotwaterflowthrough_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_domestichotwaterflowthrough_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.ndj_domestichotwaterflowthrough_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwaterflowthrough_isinerrorstate',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_domestichotwaterflowthrough_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'NDJ DomesticHotWaterFlowThrough Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.ndj_domestichotwaterflowthrough_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_domestichotwaterflowthrough_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.ndj_domestichotwaterflowthrough_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwaterflowthrough_isinwarningstate',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_domestichotwaterflowthrough_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'NDJ DomesticHotWaterFlowThrough Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.ndj_domestichotwaterflowthrough_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.ndj_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.ndj_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.ndj_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[binary_sensor.ndj_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'NDJ Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.ndj_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_holidaymode[button.ndj_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.ndj_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[button.ndj_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.ndj_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_holidaymode[climate.ndj_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.ndj_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'NDJ Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[climate.ndj_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 23,
      'friendly_name': 'NDJ Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_mode': 'away',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
      'target_temp_step': 0.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.ndj_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_holidaymode[select.ndj_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'Automatic 1',
        'Automatic 2',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.ndj_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[select.ndj_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'Automatic 1',
        'Automatic 2',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.ndj_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Automatic 1',
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.ndj_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_on_off_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.ndj_climatecontrol_on_off_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:toggle-switch-variant',
    'original_name': 'ClimateControl On Off Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_onoffmode',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_onOffMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_on_off_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ ClimateControl On Off Mode',
      'icon': 'mdi:toggle-switch-variant',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_climatecontrol_on_off_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.ndj_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'NDJ ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '23',
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_target_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.ndj_climatecontrol_target_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Target Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_targettemperature',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_climateControl_None_targetTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_climatecontrol_target_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ ClimateControl Target Temperature',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_climatecontrol_target_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '23',
  })
# ---
# name: test_holidaymode[sensor.ndj_domestichotwaterflowthrough_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_domestichotwaterflowthrough_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwaterflowthrough_errorcode',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_domestichotwaterflowthrough_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ DomesticHotWaterFlowThrough Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_domestichotwaterflowthrough_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.ndj_domestichotwaterflowthrough_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_domestichotwaterflowthrough_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterFlowThrough Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwaterflowthrough_name',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_domestichotwaterflowthrough_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ DomesticHotWaterFlowThrough Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_domestichotwaterflowthrough_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.ndj_domestichotwaterflowthrough_on_off_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.ndj_domestichotwaterflowthrough_on_off_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:toggle-switch-variant',
    'original_name': 'DomesticHotWaterFlowThrough On Off Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwaterflowthrough_onoffmode',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_domesticHotWaterFlowThrough_None_onOffMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_domestichotwaterflowthrough_on_off_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ DomesticHotWaterFlowThrough On Off Mode',
      'icon': 'mdi:toggle-switch-variant',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_domestichotwaterflowthrough_on_off_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '438CC083000',
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.45.16',
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00:23:7e:f8:91:3e',
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DRGATEWAYAA',
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_holidaymode[sensor.ndj_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'D2CND',
  })
# ---
# name: test_holidaymode[sensor.ndj_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_name',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Unit Hydro',
  })
# ---
# name: test_holidaymode[sensor.ndj_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_softwareversion',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '02_BA_B',
  })
# ---
# name: test_holidaymode[sensor.ndj_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_name',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_outdoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_holidaymode[sensor.ndj_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_softwareversion',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '--',
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_holidaymode[sensor.ndj_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_name',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_userinterface_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_holidaymode[sensor.ndj_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.ndj_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_softwareversion',
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[sensor.ndj_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'NDJ UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.ndj_userinterface_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'V37.06',
  })
# ---
# name: test_holidaymode[water_heater.ndj-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 35.0,
      'operation_list': list([
        'off',
        'heat_pump',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.ndj',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'NDJ',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 10>,
    'translation_key': None,
    'unique_id': '13995b32-fc6e-43ed-918e-5d2b01095ccb',
    'unit_of_measurement': None,
  })
# ---
# name: test_holidaymode[water_heater.ndj-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': None,
      'friendly_name': 'NDJ',
      'max_temp': 60.0,
      'min_temp': 35.0,
      'operation_list': list([
        'off',
        'heat_pump',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 10>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 49.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.ndj',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_homehub[button.homehub_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.homehub_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6a84eb95-60ea-4c21-8376-a10b3886437f_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_homehub[button.homehub_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'homehub Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.homehub_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_homehub[sensor.homehub_gateway_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.homehub_gateway_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_softwareversion',
    'unique_id': '6a84eb95-60ea-4c21-8376-a10b3886437f_gateway_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_homehub[sensor.homehub_gateway_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'homehub Gateway Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.homehub_gateway_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2.3.0',
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.homehub_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6a84eb95-60ea-4c21-8376-a10b3886437f_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'homehub RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.homehub_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.homehub_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6a84eb95-60ea-4c21-8376-a10b3886437f_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'homehub RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.homehub_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.homehub_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6a84eb95-60ea-4c21-8376-a10b3886437f_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'homehub RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.homehub_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.homehub_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6a84eb95-60ea-4c21-8376-a10b3886437f_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'homehub RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.homehub_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.homehub_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6a84eb95-60ea-4c21-8376-a10b3886437f_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'homehub RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.homehub_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.homehub_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '6a84eb95-60ea-4c21-8376-a10b3886437f_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_homehub[sensor.homehub_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'homehub RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.homehub_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.air_purifier_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_purifier_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.air_purifier_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'air-purifier ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_purifier_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.air_purifier_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'air-purifier ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_purifier_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.air_purifier_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'air-purifier ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_purifier_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.air_purifier_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_purifier_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.air_purifier_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.air_purifier_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'air-purifier Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.air_purifier_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinemergencystate',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isininstallerstate',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isholidaymodeactive',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinemergencystate',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinerrorstate',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isininstallerstate',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinwarningstate',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_ispowerfulmodeactive',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.vloerverwarming_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[binary_sensor.vloerverwarming_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Vloerverwarming Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.vloerverwarming_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[button.air_purifier_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.air_purifier_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[button.air_purifier_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.air_purifier_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_mc80z[button.vloerverwarming_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.vloerverwarming_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[button.vloerverwarming_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.vloerverwarming_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_mc80z[climate.vloerverwarming_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.vloerverwarming_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Vloerverwarming Leaving Water Offset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[climate.vloerverwarming_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 25,
      'friendly_name': 'Vloerverwarming Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 1,
      'temperature': -3,
    }),
    'context': <ANY>,
    'entity_id': 'climate.vloerverwarming_leaving_water_offset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_mc80z[select.air_purifier_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.air_purifier_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[select.air_purifier_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.air_purifier_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_mc80z[select.vloerverwarming_domestichotwatertank_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.vloerverwarming_domestichotwatertank_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'DomesticHotWaterTank Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[select.vloerverwarming_domestichotwatertank_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.vloerverwarming_domestichotwatertank_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User defined',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_air_purification_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.air_purifier_climatecontrol_air_purification_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Air Purification Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_airpurificationmode',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_airPurificationMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_air_purification_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier ClimateControl Air Purification Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_climatecontrol_air_purification_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'econo',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00-00',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_pm10_concentration-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.air_purifier_climatecontrol_pm10_concentration',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM10: 'pm10'>,
    'original_icon': 'mdi:blur',
    'original_name': 'ClimateControl Pm10 Concentration',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_pm10concentration',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_pm10Concentration',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_pm10_concentration-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm10',
      'friendly_name': 'air-purifier ClimateControl Pm10 Concentration',
      'icon': 'mdi:blur',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_climatecontrol_pm10_concentration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_pm1_concentration-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.air_purifier_climatecontrol_pm1_concentration',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM1: 'pm1'>,
    'original_icon': 'mdi:blur',
    'original_name': 'ClimateControl Pm1 Concentration',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_pm1concentration',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_pm1Concentration',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_pm1_concentration-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm1',
      'friendly_name': 'air-purifier ClimateControl Pm1 Concentration',
      'icon': 'mdi:blur',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_climatecontrol_pm1_concentration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_pm25_concentration-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.air_purifier_climatecontrol_pm25_concentration',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.PM25: 'pm25'>,
    'original_icon': 'mdi:blur',
    'original_name': 'ClimateControl Pm25 Concentration',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_pm25concentration',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_pm25Concentration',
    'unit_of_measurement': 'μg/m³',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_pm25_concentration-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pm25',
      'friendly_name': 'air-purifier ClimateControl Pm25 Concentration',
      'icon': 'mdi:blur',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': 'μg/m³',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_climatecontrol_pm25_concentration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_room_humidity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.air_purifier_climatecontrol_room_humidity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': 'mdi:water-percent',
    'original_name': 'ClimateControl Room Humidity',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomhumidity',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_roomHumidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_room_humidity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'air-purifier ClimateControl Room Humidity',
      'icon': 'mdi:water-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_climatecontrol_room_humidity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '56',
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.air_purifier_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_mc80z[sensor.air_purifier_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'air-purifier ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_28_0',
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.31',
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '9c:50:d1:ba:3a:96',
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C4x',
  })
# ---
# name: test_mc80z[sensor.air_purifier_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'MC80Z_',
  })
# ---
# name: test_mc80z[sensor.air_purifier_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '22014C01',
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.air_purifier_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.air_purifier_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'air-purifier RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.air_purifier_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'externalRoomTemperature',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '15',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '416',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_leavingwatertemperature',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Vloerverwarming ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '25',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Vloerverwarming',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Vloerverwarming ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_setpointmode',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependent',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_target_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_target_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'ClimateControl Target Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_targettemperature',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_climateControl_None_targetTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_climatecontrol_target_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming ClimateControl Target Temperature',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_climatecontrol_target_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '-3',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_errorcode',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '68',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Heatup Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_heatupmode',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_heatup_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'scheduleOnly',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_name',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Warm water',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_setpointmode',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_tanktemperature',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Vloerverwarming DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '41',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '436CC166000',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.205',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00:23:7e:cb:98:8d',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A61',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVH08S23DA6V',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_name',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Unit Hydro',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_softwareversion',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'ID7401',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_name',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_outdoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_softwareversion',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'IDE7C4',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_name',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_userinterface_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.vloerverwarming_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_softwareversion',
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[sensor.vloerverwarming_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Vloerverwarming UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.vloerverwarming_userinterface_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'v01.07.00',
  })
# ---
# name: test_mc80z[water_heater.vloerverwarming-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.vloerverwarming',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Vloerverwarming',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 10>,
    'translation_key': None,
    'unique_id': '4e19a975-b0e4-4ae1-8439-c037e7d0df01',
    'unit_of_measurement': None,
  })
# ---
# name: test_mc80z[water_heater.vloerverwarming-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 41.0,
      'friendly_name': 'Vloerverwarming',
      'max_temp': 60.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 10>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 43.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.vloerverwarming',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinemergencystate',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isininstallerstate',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isholidaymodeactive',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinerrorstate',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isininstallerstate',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[binary_sensor.altherma_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[button.altherma_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.altherma_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[button.altherma_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.altherma_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_minimal_data[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 384>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 26,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'supported_features': <ClimateEntityFeature: 384>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 30,
      'min_temp': 12,
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 385>,
    'translation_key': 'daikin_onecta',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 21.2,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 30,
      'min_temp': 12,
      'supported_features': <ClimateEntityFeature: 385>,
      'target_temp_step': 0.5,
      'temperature': 22,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '447',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1243',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_leavingwatertemperature',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '9',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21.2',
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_setpointmode',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '22',
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1232',
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Heatup Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_heatupmode',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'reheatOnly',
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_name',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_setpointmode',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_tanktemperature',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_minimal_data[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '53',
  })
# ---
# name: test_minimal_data[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.2.13',
  })
# ---
# name: test_minimal_data[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_minimal_data[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_minimal_data[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S18EJ6V',
  })
# ---
# name: test_minimal_data[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_name',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_minimal_data[sensor.altherma_userinterface_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_modelinfo',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_userInterface_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_userinterface_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S18EJ6V',
  })
# ---
# name: test_minimal_data[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_name',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_minimal_data[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_softwareversion',
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '7.5.0',
  })
# ---
# name: test_minimal_data[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': None,
      'min_temp': None,
      'operation_list': list([
        'off',
        'heat_pump',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 10>,
    'translation_key': None,
    'unique_id': 'b84e8af3-310a-4e6e-8e52-295573423485',
    'unit_of_measurement': None,
  })
# ---
# name: test_minimal_data[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 53.0,
      'friendly_name': 'Altherma',
      'max_temp': None,
      'min_temp': None,
      'operation_list': list([
        'off',
        'heat_pump',
      ]),
      'operation_mode': 'heat_pump',
      'supported_features': <WaterHeaterEntityFeature: 10>,
      'target_temp_high': None,
      'target_temp_low': None,
      'temperature': None,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat_pump',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isincautionstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Studio ClimateControl Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Studio ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Studio ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_gateway_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_gateway_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isinerrorstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_gateway_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Studio Gateway Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_gateway_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_outdoorunit_is_in_caution_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_outdoorunit_is_in_caution_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Caution State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isincautionstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_outdoorUnit_None_isInCautionState',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_outdoorunit_is_in_caution_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Studio OutdoorUnit Is In Caution State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_outdoorunit_is_in_caution_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_outdoorunit_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_outdoorunit_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinerrorstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_outdoorUnit_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_outdoorunit_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Studio OutdoorUnit Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_outdoorunit_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_outdoorunit_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.studio_outdoorunit_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_isinwarningstate',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_outdoorUnit_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[binary_sensor.studio_outdoorunit_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Studio OutdoorUnit Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.studio_outdoorunit_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[button.studio_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.studio_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[button.studio_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.studio_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[climate.studio_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.studio_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Studio Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 952>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[climate.studio_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'fan_modes': list([
        'auto',
        'quiet',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'Studio Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
      ]),
      'max_temp': 31,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'boost',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 952>,
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
        'windnice',
      ]),
      'target_temp_step': 0.5,
    }),
    'context': <ANY>,
    'entity_id': 'climate.studio_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[select.studio_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.studio_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[select.studio_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.studio_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Studio ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Studio ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Studio ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Studio ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Studio ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Studio ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_on_off_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_on_off_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:toggle-switch-variant',
    'original_name': 'ClimateControl On Off Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_onoffmode',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_onOffMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_on_off_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio ClimateControl On Off Mode',
      'icon': 'mdi:toggle-switch-variant',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_on_off_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Studio ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_powerful_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_powerful_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:rocket-launch',
    'original_name': 'ClimateControl Powerful Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_powerfulmode',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_None_powerfulMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_powerful_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio ClimateControl Powerful Mode',
      'icon': 'mdi:rocket-launch',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_powerful_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.studio_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_offlinedevice[sensor.studio_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Studio ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_gateway_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_errorcode',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio Gateway Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_gateway_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_outdoorunit_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_outdoorunit_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_errorcode',
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_outdoorUnit_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_outdoorunit_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio OutdoorUnit Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_outdoorunit_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.studio_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1c80e348-61c1-4f0d-a8b1-917f2f904529_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_offlinedevice[sensor.studio_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Studio RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.studio_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_schedule[binary_sensor.master_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[binary_sensor.master_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_schedule[binary_sensor.master_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[binary_sensor.master_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Master ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_schedule[binary_sensor.master_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[binary_sensor.master_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_schedule[binary_sensor.master_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.master_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[binary_sensor.master_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.master_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_schedule[button.master_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.master_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[button.master_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.master_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_schedule[climate.master_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        '1',
        '2',
        '3',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
      ]),
      'max_temp': 32,
      'min_temp': 16,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.master_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Master Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 409>,
    'translation_key': 'daikin_onecta',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[climate.master_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 21,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        '1',
        '2',
        '3',
      ]),
      'friendly_name': 'Master Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
      ]),
      'max_temp': 32,
      'min_temp': 16,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 409>,
      'target_temp_step': 0.5,
      'temperature': 20,
    }),
    'context': <ANY>,
    'entity_id': 'climate.master_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_schedule[select.master_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.master_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[select.master_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.master_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_schedule[sensor.master_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00',
  })
# ---
# name: test_schedule[sensor.master_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Master',
  })
# ---
# name: test_schedule[sensor.master_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.master_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_schedule[sensor.master_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Master ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '21',
  })
# ---
# name: test_schedule[sensor.master_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_31_0',
  })
# ---
# name: test_schedule[sensor.master_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.0.32',
  })
# ---
# name: test_schedule[sensor.master_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'e8:4f:25:d7:97:aa',
  })
# ---
# name: test_schedule[sensor.master_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069C8x',
  })
# ---
# name: test_schedule[sensor.master_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_schedule[sensor.master_indoorunit_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_indoorunit_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_modelinfo',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_indoorUnit_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_indoorunit_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master IndoorUnit Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_indoorunit_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FNA25A2VEB9',
  })
# ---
# name: test_schedule[sensor.master_indoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_indoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_name',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_indoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_indoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master IndoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_indoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Unit',
  })
# ---
# name: test_schedule[sensor.master_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_schedule[sensor.master_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_schedule[sensor.master_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_schedule[sensor.master_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_schedule[sensor.master_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_schedule[sensor.master_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_schedule[sensor.master_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.master_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '7edb544e-2c53-405b-98bc-3d9392f4d1f9_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_schedule[sensor.master_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Master RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.master_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_ururu[binary_sensor.daikinap95800_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.daikinap95800_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[binary_sensor.daikinap95800_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.daikinap95800_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_ururu[binary_sensor.daikinap95800_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.daikinap95800_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[binary_sensor.daikinap95800_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'DaikinAP95800 ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.daikinap95800_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_ururu[binary_sensor.daikinap95800_climatecontrol_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.daikinap95800_climatecontrol_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_ispowerfulmodeactive',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_climateControl_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[binary_sensor.daikinap95800_climatecontrol_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 ClimateControl Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.daikinap95800_climatecontrol_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_ururu[binary_sensor.daikinap95800_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.daikinap95800_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[binary_sensor.daikinap95800_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.daikinap95800_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_ururu[button.daikinap95800_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.daikinap95800_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[button.daikinap95800_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.daikinap95800_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_ururu[climate.daikinap95800_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'fan_modes': list([
        'auto',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_modes': list([
        'stop',
        'swing',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.daikinap95800_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'DaikinAP95800 Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 953>,
    'translation_key': 'daikin_onecta',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[climate.daikinap95800_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 23,
      'fan_mode': 'auto',
      'fan_modes': list([
        'auto',
        '1',
        '2',
        '3',
        '4',
        '5',
      ]),
      'friendly_name': 'DaikinAP95800 Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
        <HVACMode.DRY: 'dry'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.FAN_ONLY: 'fan_only'>,
      ]),
      'max_temp': 30,
      'min_temp': 10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 953>,
      'swing_horizontal_mode': 'stop',
      'swing_horizontal_modes': list([
        'stop',
        'swing',
      ]),
      'swing_mode': 'stop',
      'swing_modes': list([
        'stop',
        'swing',
      ]),
      'target_temp_step': 0.5,
      'temperature': 20,
    }),
    'context': <ANY>,
    'entity_id': 'climate.daikinap95800_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_ururu[select.daikinap95800_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.daikinap95800_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[select.daikinap95800_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        '0',
        '1',
        '2',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.daikinap95800_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_ururu[sensor.daikinap95800_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00',
  })
# ---
# name: test_ururu[sensor.daikinap95800_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'DaikinAP95800',
  })
# ---
# name: test_ururu[sensor.daikinap95800_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.daikinap95800_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_ururu[sensor.daikinap95800_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'DaikinAP95800 ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_ururu[sensor.daikinap95800_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.daikinap95800_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_ururu[sensor.daikinap95800_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'DaikinAP95800 ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '23',
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1_14_88',
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.2.42',
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10:68:38:c4:d3:88',
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069B4x',
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_ururu[sensor.daikinap95800_indoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_indoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_name',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_indoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_indoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 IndoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_indoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Unit',
  })
# ---
# name: test_ururu[sensor.daikinap95800_indoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_indoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunit_softwareversion',
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_indoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_indoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 IndoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_indoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1',
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.daikinap95800_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '95c2f177-dd7a-4bdc-ad48-1a7f47f34a01_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_ururu[sensor.daikinap95800_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'DaikinAP95800 RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.daikinap95800_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_climatecontrol_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma ClimateControl Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_climatecontrol_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Holiday Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isholidaymodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isHolidayModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Holiday Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_holiday_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Emergency State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinemergencystate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInEmergencyState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_emergency_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Emergency State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_emergency_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_error_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Error State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinerrorstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInErrorState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_error_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Error State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_error_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Installer State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isininstallerstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInInstallerState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_installer_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Installer State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_installer_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is In Warning State',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_isinwarningstate',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isInWarningState',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_in_warning_state-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': 'Altherma DomesticHotWaterTank Is In Warning State',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_in_warning_state',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Is Powerful Mode Active',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_ispowerfulmodeactive',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_isPowerfulModeActive',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Is Powerful Mode Active',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_domestichotwatertank_is_powerful_mode_active',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_water_heater[binary_sensor.altherma_gateway_is_firmware_update_supported-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Is Firmware Update Supported',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_isfirmwareupdatesupported',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_isFirmwareUpdateSupported',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[binary_sensor.altherma_gateway_is_firmware_update_supported-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Is Firmware Update Supported',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.altherma_gateway_is_firmware_update_supported',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_water_heater[button.altherma_refresh-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': <EntityCategory.CONFIG: 'config'>,
    'entity_id': 'button.altherma_refresh',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:refresh',
    'original_name': 'Refresh',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_refresh',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[button.altherma_refresh-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Refresh',
      'icon': 'mdi:refresh',
    }),
    'context': <ANY>,
    'entity_id': 'button.altherma_refresh',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_water_heater[climate.altherma_leaving_water_offset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 1,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Offset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterOffset',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[climate.altherma_leaving_water_offset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 26,
      'friendly_name': 'Altherma Leaving Water Offset',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 10,
      'min_temp': -10,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 1,
      'temperature': 0,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_offset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_water_heater[climate.altherma_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_modes': list([
        'away',
        'none',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 400>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_leavingWaterTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[climate.altherma_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 26,
      'friendly_name': 'Altherma Leaving Water Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 35,
      'min_temp': 7,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 400>,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_water_heater[climate.altherma_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 23,
      'min_temp': 18,
      'preset_modes': list([
        'away',
        'none',
      ]),
      'target_temp_step': 0.5,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'climate',
    'entity_category': None,
    'entity_id': 'climate.altherma_room_temperature',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <ClimateEntityFeature: 401>,
    'translation_key': 'daikin_onecta',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_roomTemperature',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[climate.altherma_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 19.4,
      'friendly_name': 'Altherma Room Temperature',
      'hvac_modes': list([
        <HVACMode.OFF: 'off'>,
        <HVACMode.HEAT: 'heat'>,
        <HVACMode.COOL: 'cool'>,
        <HVACMode.HEAT_COOL: 'heat_cool'>,
      ]),
      'max_temp': 23,
      'min_temp': 18,
      'preset_mode': 'none',
      'preset_modes': list([
        'away',
        'none',
      ]),
      'supported_features': <ClimateEntityFeature: 401>,
      'target_temp_step': 0.5,
      'temperature': 19,
    }),
    'context': <ANY>,
    'entity_id': 'climate.altherma_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'heat',
  })
# ---
# name: test_water_heater[select.altherma_climatecontrol_schedule-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'options': list([
        'User defined 1',
        'User defined 2',
        'User defined 3',
        'off',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'select',
    'entity_category': None,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:calendar-clock',
    'original_name': 'ClimateControl Schedule',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_schedule',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[select.altherma_climatecontrol_schedule-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Schedule',
      'icon': 'mdi:calendar-clock',
      'options': list([
        'User defined 1',
        'User defined 2',
        'User defined 3',
        'off',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'select.altherma_climatecontrol_schedule',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_control_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Control Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_controlmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_controlMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_control_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Control Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_control_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'roomTemperature',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Daily Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Weekly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:snowflake',
    'original_name': 'ClimateControl Cooling Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_cooling_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Cooling Yearly Electrical Consumption',
      'icon': 'mdi:snowflake',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_cooling_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '5',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '7',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'ClimateControl Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma ClimateControl Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1035',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_leaving_water_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Leaving Water Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_leavingwatertemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_leavingWaterTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_leaving_water_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Leaving Water Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_leaving_water_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '26',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'ClimateControl Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Altherma',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_outdoor_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Outdoor Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_outdoortemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_outdoorTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_outdoor_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Outdoor Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_outdoor_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_room_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': '',
    'original_name': 'ClimateControl Room Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_roomtemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_sensoryData_roomTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_room_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma ClimateControl Room Temperature',
      'icon': '',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_room_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '19.4',
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'ClimateControl Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'climatecontrol_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_climateControl_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_climatecontrol_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma ClimateControl Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_climatecontrol_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'weatherDependentHeatingFixedCooling',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_error_code-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Error Code',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_errorcode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_errorCode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_error_code-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Error Code',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_error_code',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Daily Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_d',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Daily Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_daily_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Weekly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_w',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Weekly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_weekly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '4',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:fire',
    'original_name': 'DomesticHotWaterTank Heating Yearly Electrical Consumption',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_electrical_heating_m',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Altherma DomesticHotWaterTank Heating Yearly Electrical Consumption',
      'icon': 'mdi:fire',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heating_yearly_electrical_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '281',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heatup_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Heatup Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_heatupmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_heatupMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_heatup_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Heatup Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_heatup_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'reheatOnly',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'DomesticHotWaterTank Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_setpoint_mode-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:alphabetical',
    'original_name': 'DomesticHotWaterTank Setpoint Mode',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_setpointmode',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_None_setpointMode',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_setpoint_mode-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma DomesticHotWaterTank Setpoint Mode',
      'icon': 'mdi:alphabetical',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_setpoint_mode',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'fixed',
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_tank_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:bathtub-outline',
    'original_name': 'DomesticHotWaterTank Tank Temperature',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'domestichotwatertank_tanktemperature',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_domesticHotWaterTank_sensoryData_tankTemperature',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_water_heater[sensor.altherma_domestichotwatertank_tank_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Altherma DomesticHotWaterTank Tank Temperature',
      'icon': 'mdi:bathtub-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_domestichotwatertank_tank_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '46',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_firmware_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Firmware Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_firmwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_firmwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_firmware_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Firmware Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_firmware_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '3.2.5',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_ip_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:ip-network',
    'original_name': 'Gateway Ip Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_ipaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_ipAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_ip_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Ip Address',
      'icon': 'mdi:ip-network',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_ip_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '192.168.1.207',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_mac_address-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Mac Address',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_macaddress',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_macAddress',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_mac_address-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Mac Address',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_mac_address',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '00:e9:3a:67:14:a6',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'BRP069A78',
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_gateway_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'Gateway Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'gateway_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_gateway_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_gateway_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma Gateway Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_gateway_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Gateway',
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Indoor Hydro Unit',
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'IndoorUnitHydro Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'indoorunithydro_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_indoorUnitHydro_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_indoorunithydro_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma IndoorUnitHydro Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_indoorunithydro_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0223',
  })
# ---
# name: test_water_heater[sensor.altherma_outdoorunit_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_outdoorunit_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'Outdoor Unit',
  })
# ---
# name: test_water_heater[sensor.altherma_outdoorunit_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'OutdoorUnit Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'outdoorunit_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_outdoorUnit_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_outdoorunit_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma OutdoorUnit Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_outdoorunit_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'FFFF',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_minute-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit minute',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_minute',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_minute-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit minute',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_minute',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_ratelimit_reset-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit ratelimit_reset',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_ratelimit_reset',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_ratelimit_reset-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit ratelimit_reset',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_ratelimit_reset',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_remaining_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_day',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_day',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_remaining_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_day',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_remaining_minutes-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit remaining_minutes',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_remaining_minutes',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_remaining_minutes-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit remaining_minutes',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_remaining_minutes',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_retry_after-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'RateLimit retry_after',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_limitsensor_retry_after',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_ratelimit_retry_after-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma RateLimit retry_after',
      'icon': 'mdi:information-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_ratelimit_retry_after',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '0',
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_model_info-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Model Info',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_modelinfo',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_modelInfo',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_model_info-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Model Info',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_model_info',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'EHVX08S23EJ9W',
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_name-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Name',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_name',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_name',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_name-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Name',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_name',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'User Interface',
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_software_version-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:information-outline',
    'original_name': 'UserInterface Software Version',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'userinterface_softwareversion',
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa_userInterface_None_softwareVersion',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[sensor.altherma_userinterface_software_version-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Altherma UserInterface Software Version',
      'icon': 'mdi:information-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.altherma_userinterface_software_version',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '7.3.0',
  })
# ---
# name: test_water_heater[water_heater.altherma-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'max_temp': 53.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'water_heater',
    'entity_category': None,
    'entity_id': 'water_heater.altherma',
    'has_entity_name': False,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Altherma',
    'platform': 'daikin_onecta',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': <WaterHeaterEntityFeature: 11>,
    'translation_key': None,
    'unique_id': '1ece521b-5401-4a42-acce-6f76fba246aa',
    'unit_of_measurement': None,
  })
# ---
# name: test_water_heater[water_heater.altherma-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'current_temperature': 46.0,
      'friendly_name': 'Altherma',
      'max_temp': 53.0,
      'min_temp': 30.0,
      'operation_list': list([
        'off',
        'heat_pump',
        'performance',
      ]),
      'operation_mode': 'performance',
      'supported_features': <WaterHeaterEntityFeature: 11>,
      'target_temp_high': None,
      'target_temp_low': None,
      'target_temp_step': 1.0,
      'temperature': 48.0,
    }),
    'context': <ANY>,
    'entity_id': 'water_heater.altherma',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'performance',
  })
# ---
